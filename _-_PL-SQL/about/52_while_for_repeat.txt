Циклы

Цикл позволяет выполнить последовательность предложений несколько раз

Три типа циклов:
 - простой цикл 
 - цикл FOR
 - цикл WHILE
 
 1) Простой цикл:синтаксис
 
 Многократное выполнение команд с помощью простого цикла
 
 LOOP           --ограничитель
    statement1; --оператор
    ...
    EXIT [THEN condition]; --оператор EXIT
 END LOOP;      --ограничитель
 
 Без предложения EXIT цикл был бы бесконечным
 
 Пример: 
 
 Включение первых десяти товарных позиций в заказ номер 101.
 
 v_ord_id  s_item.ord_id%TYPE:=101;
 v_counter  NUMBER(2):=1;

BEGIN
...
  LOOP
    INSERT INTO s_item (ord_id, item_id)
    VALUES (v_ord_id, v_counter);
  v_counter:=v_counter+1;
  EXIT WHEN v_counter>10;
  END LOOP;
...
END;

2) Цикл FOR:синтаксис

Цикл FOR - это быстрый способ проверки кол-ва повтора цикла.

FOR индекс in [REVERSE]
  нижняя_граница .. верхняя_граница LOOP
  предложение1;
  предложение2;
  ...
END LOOP;

Цикл FOR: пример

Пример
- Вывод кол-ва выполнений цикла и последнего значения индекса.

Указания 
- Ссылаться на индекс можно только внутри цикла; вне цикла он не определен.
- Для ссылки на текущее значение индекса можно использовать выражение.
- Нельзя ссылаться на индекс в качестве переменной в левой части оператора присваивания.

3) Цикл WHILE: синтаксис

Цикл WHILE используется для повторения цикла в течение всего времени, пока выполняется условие.

WHILE condition LOOP --условие оценивается
  statement1;        --в начале каждой 
  statement2;        --итерации
  ...
END LOOP;

Цикл WHILE: пример

Включение первых десяти товарных позиций в заказ номер 101.

v_ord_id s_item.ord_id%TYPE:=101;
v_counter NUMBER(2):=1;
BEGIN
...
  WHILE v_counter<=10 LOOP
    INSERT INTO s_item (ord_id, item_id)
    VALUES (v_ord_id,v_counter);
  v_counter:=v_counter+1;
  END LOOP;
...
END;

  
